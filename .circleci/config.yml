base_config: &base_config
  docker:
    - image: circleci/node:lts
  working_directory: ~/project

version: 2
jobs:
  build:
    <<: *base_config
    steps:
      - checkout
      - run:
          name: Installing Dependencies
          command: npm ci
      - run:
          name: Building in prod mode
          command: npm run build:prod
      - persist_to_workspace:
          root: .
          paths:
             - ./.git
             - ./node_modules
             - ./dist
             - ./package.json
             - ./firebase.json
             - ./.firebaserc
             - ./.netlify
             - ./scripts


  test:
    <<: *base_config
    steps:
      - attach_workspace:
          at: .
      - run:
          name:  Running Tests
          command: npm run test


  upload_artifacts:
    <<: *base_config
    steps:
      - attach_workspace:
          at: .
      - store_artifacts:
          path: dist
          destination: dist

  deploy_prod:
    <<: *base_config
    steps:
      - attach_workspace:
          at: .
      - run:
          name:  Deploying to thevinesh.dev
          command: |
                    ./node_modules/.bin/firebase deploy  --non-interactive --token $FIREBASE_TOKEN
  
  deploy_staging:
    <<: *base_config
    steps:
      - attach_workspace:
          at: .
      - run:
          name:  Deploying to staging
          command: |
                    ./node_modules/.bin/netlify deploy -p --dir=dist
              
  create_release:
    <<: *base_config
    steps:
      - attach_workspace:
          at: .
      - run:
          name:  Creating release
          command: npm run release
       
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - upload_artifacts:
          requires:
            - build
      - create_release:
          requires:
            - build
            - test
      - deploy_prod:
          requires:
            - build
            - test
          filters:
            branches:
              only: master
      - deploy_staging:
          requires:
            - build
          filters:
            branches:
              only: dev